// Code generated by MockGen. DO NOT EDIT.
// Source: jwter.go

// Package services_mock is a generated GoMock package.
package services_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJWTer is a mock of JWTer interface.
type MockJWTer struct {
	ctrl     *gomock.Controller
	recorder *MockJWTerMockRecorder
}

// MockJWTerMockRecorder is the mock recorder for MockJWTer.
type MockJWTerMockRecorder struct {
	mock *MockJWTer
}

// NewMockJWTer creates a new mock instance.
func NewMockJWTer(ctrl *gomock.Controller) *MockJWTer {
	mock := &MockJWTer{ctrl: ctrl}
	mock.recorder = &MockJWTerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTer) EXPECT() *MockJWTerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockJWTer) Create(ctx context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockJWTerMockRecorder) Create(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockJWTer)(nil).Create), ctx)
}

// Verify mocks base method.
func (m *MockJWTer) Verify(ctx context.Context, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify.
func (mr *MockJWTerMockRecorder) Verify(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockJWTer)(nil).Verify), ctx, token)
}
